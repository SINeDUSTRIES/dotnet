<Project>
<!-- defines project properties for SINeDUSTRIES libraries -->
<!-- Imports -->
<!-- import the .user variant in this directory, if this is not the project directory (does not repeat above import) -->
  <Import
    Condition="Exists('$(MSBuildThisFileFullPath).user')"
    Project="$(MSBuildThisFileFullPath).user"
    />
    
<!-- import Directory.Build from the directory above this file -->
  <Import
    Condition="Exists($([MSBuild]::GetPathOfFileAbove('$(MSBuildThisFile)', '$(MSBuildThisFileDirectory)../')))" 
    Project="$([MSBuild]::GetPathOfFileAbove('$(MSBuildThisFile)', '$(MSBuildThisFileDirectory)../'))" 
    />  
  
<!-- Output Paths -->
  <PropertyGroup>
    <BaseOutputPath>.build\$(MSBuildProjectName)\bin\</BaseOutputPath>
    <BaseIntermediateOutputPath>.build\$(MSBuildProjectName)\obj\</BaseIntermediateOutputPath>
  </PropertyGroup>
  
<!-- Build -->
<!-- this does not work for some reason -->
  <ItemGroup>
    <Compile Remove="**" />
    <EmbeddedResource Remove="**" />
    <None Remove="**" />
  </ItemGroup>
  
<!-- Common -->
  <PropertyGroup>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo> <!-- fixes duplicate issues -->
    <CompanyShort>SINeDUSTRIES</CompanyShort>
    <PackageIconUrl>https://raw.githubusercontent.com/SINeDUSTRIES/Corporate/master/brand/logo.png</PackageIconUrl>
  </PropertyGroup>
  
  <PropertyGroup Condition="$(MSBuildProjectFile.Contains('Test')) == 'False'">  <!-- libraries. build as dotnet standard if project file DOES NOT CONTAIN "test" -->
    <TargetFramework>netstandard2.0</TargetFramework>
    <DocumentationFile>$(OutputPath)\$(MSBuildProjectName).xml</DocumentationFile>
  </PropertyGroup>
  
<!-- Common: Legal -->
  <PropertyGroup>
    <Copyright>Â© 2018 SINeDUSTRIES, LLC</Copyright>
    <Company>SINeDUSTRIES, LLC</Company>
    <Authors>Walter Blacke</Authors>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageLicenseUrl>https://github.com/SINeDUSTRIES/Corporate/blob/master/licenses/Basic.md</PackageLicenseUrl>
  </PropertyGroup>
  
<!-- Common: References: don't copy references to output assembly -->
  <ItemDefinitionGroup Condition="$(MSBuildProjectFile.Contains('Test')) == 'False'">  <!-- exclude tests -->
    <Reference>
      <Private>False</Private>
    </Reference>
    <ProjectReference>
      <Private>False</Private>
    </ProjectReference>
    <PackageReference>
      <PrivateAssets>runtime</PrivateAssets>
    </PackageReference>
  </ItemDefinitionGroup>

<!-- MSBump. sets properties used by MSBump based on the $(BumpType) property.  -->
  <ItemGroup>
    <PackageReference Include="MSBump" Version="2.3.2" PrivateAssets="All" />
  </ItemGroup>
  
  <PropertyGroup Condition="$(Configuration) == 'Debug'">
    <BumpLabel>debug</BumpLabel>
    <BumpLabelDigits>4</BumpLabelDigits>
  </PropertyGroup>
  
  <PropertyGroup Condition="$(Configuration) == 'Release'">
    <BumpResetLabel>debug</BumpResetLabel>
  </PropertyGroup>
  
  <PropertyGroup Condition="$(Configuration) == 'Release' And '$(BumpType)' == 'Revision'">
    <BumpRevision>True</BumpRevision>
  </PropertyGroup>
  
  <PropertyGroup Condition="$(Configuration) == 'Release' And '$(BumpType)' == 'Patch'">
    <BumpResetRevision>True</BumpResetRevision>
    <BumpPatch>True</BumpPatch>
  </PropertyGroup>
  
  <PropertyGroup Condition="$(Configuration) == 'Release' And '$(BumpType)' == 'Minor'">
    <BumpResetRevision>True</BumpResetRevision>
    <BumpResetPatch>True</BumpResetPatch>
    <BumpMinor>True</BumpMinor>
  </PropertyGroup>
  
  <PropertyGroup Condition="$(Configuration) == 'Release' And '$(BumpType)' == 'Major'">
    <BumpResetRevision>True</BumpResetRevision>
    <BumpResetPatch>True</BumpResetPatch>
    <BumpResetMinor>True</BumpResetMinor>
    <BumpMajor>True</BumpMajor>
  </PropertyGroup>
  
  <PropertyGroup Condition="$(Configuration) == 'Release' And '$(BumpType)' == 'Reset'">
    <BumpResetLabel>debug</BumpResetLabel>
    <BumpResetRevision>True</BumpResetRevision>
    <BumpResetPatch>True</BumpResetPatch>
    <BumpResetMinor>True</BumpResetMinor>
    <BumpResetMajor>True</BumpResetMajor>
  </PropertyGroup>
  
<!-- Commands -->
  <PropertyGroup>
    <CommandNuGetUpdate>dotnet update package</CommandNuGetUpdate>
    <CommandNuGetPack>dotnet pack $(MSBuildProjectFile) --no-build -c $(Configuration)</CommandNuGetPack>
  </PropertyGroup>
  
  <PropertyGroup>
    <BuildDependsOn>
      RestorePackages;
      NuGetUpdate;
      $(BuildDependsOn);
    </BuildDependsOn>   
  </PropertyGroup>

</Project>